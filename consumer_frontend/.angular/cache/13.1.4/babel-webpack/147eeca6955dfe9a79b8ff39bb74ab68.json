{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\Hp\\\\Desktop\\\\Customer Management\\\\consumer_frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport axios from 'axios';\nimport * as i0 from \"@angular/core\";\nconst API = 'http://localhost:4000/api/customers';\nexport class CustomerService {\n  getAuthHeaders() {\n    const token = localStorage.getItem('token'); // Make sure you store JWT after login\n\n    return {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    };\n  }\n\n  getCustomers() {\n    var _this = this;\n\n    return _asyncToGenerator(function* (page = 1, limit = 10, filters = {}) {\n      const params = Object.assign({\n        page,\n        limit\n      }, filters);\n      const res = yield axios.get(API, Object.assign(Object.assign({}, _this.getAuthHeaders()), {\n        params\n      }));\n      return res.data;\n    }).apply(this, arguments);\n  }\n\n  getCustomer(id) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const res = yield axios.get(`${API}/${id}`, _this2.getAuthHeaders());\n      return res.data;\n    })();\n  }\n\n  createCustomer(data) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      const res = yield axios.post(API, data, _this3.getAuthHeaders());\n      return res.data;\n    })();\n  }\n\n  updateCustomer(id, data) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      const res = yield axios.put(`${API}/${id}`, data, _this4.getAuthHeaders());\n      return res.data;\n    })();\n  }\n\n  deleteCustomer(id) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      const res = yield axios.delete(`${API}/${id}`, _this5.getAuthHeaders());\n      return res.data;\n    })();\n  }\n\n}\n\nCustomerService.ɵfac = function CustomerService_Factory(t) {\n  return new (t || CustomerService)();\n};\n\nCustomerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CustomerService,\n  factory: CustomerService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/Hp/Desktop/Customer Management/consumer_frontend/src/app/customers/customer.service.ts"],"names":["axios","i0","API","CustomerService","getAuthHeaders","token","localStorage","getItem","headers","getCustomers","page","limit","filters","params","Object","assign","res","get","data","getCustomer","id","createCustomer","post","updateCustomer","put","deleteCustomer","delete","ɵfac","CustomerService_Factory","t","ɵprov","ɵɵdefineInjectable","factory","providedIn"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,MAAMC,GAAG,GAAG,qCAAZ;AACA,OAAO,MAAMC,eAAN,CAAsB;AACzBC,EAAAA,cAAc,GAAG;AACb,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CADa,CACgC;;AAC7C,WAAO;AACHC,MAAAA,OAAO,EAAE;AACL,yBAAkB,UAASH,KAAM,EAD5B;AAEL,wBAAgB;AAFX;AADN,KAAP;AAMH;;AACKI,EAAAA,YAAY,GAAqC;AAAA;;AAAA,wCAApCC,IAAI,GAAG,CAA6B,EAA1BC,KAAK,GAAG,EAAkB,EAAdC,OAAO,GAAG,EAAI;AACnD,YAAMC,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAc;AAAEL,QAAAA,IAAF;AAAQC,QAAAA;AAAR,OAAd,EAA+BC,OAA/B,CAAf;AACA,YAAMI,GAAG,SAAShB,KAAK,CAACiB,GAAN,CAAUf,GAAV,EAAeY,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAI,CAACX,cAAL,EAAlB,CAAd,EAAwD;AAAES,QAAAA;AAAF,OAAxD,CAAf,CAAlB;AACA,aAAOG,GAAG,CAACE,IAAX;AAHmD;AAItD;;AACKC,EAAAA,WAAW,CAACC,EAAD,EAAK;AAAA;;AAAA;AAClB,YAAMJ,GAAG,SAAShB,KAAK,CAACiB,GAAN,CAAW,GAAEf,GAAI,IAAGkB,EAAG,EAAvB,EAA0B,MAAI,CAAChB,cAAL,EAA1B,CAAlB;AACA,aAAOY,GAAG,CAACE,IAAX;AAFkB;AAGrB;;AACKG,EAAAA,cAAc,CAACH,IAAD,EAAO;AAAA;;AAAA;AACvB,YAAMF,GAAG,SAAShB,KAAK,CAACsB,IAAN,CAAWpB,GAAX,EAAgBgB,IAAhB,EAAsB,MAAI,CAACd,cAAL,EAAtB,CAAlB;AACA,aAAOY,GAAG,CAACE,IAAX;AAFuB;AAG1B;;AACKK,EAAAA,cAAc,CAACH,EAAD,EAAKF,IAAL,EAAW;AAAA;;AAAA;AAC3B,YAAMF,GAAG,SAAShB,KAAK,CAACwB,GAAN,CAAW,GAAEtB,GAAI,IAAGkB,EAAG,EAAvB,EAA0BF,IAA1B,EAAgC,MAAI,CAACd,cAAL,EAAhC,CAAlB;AACA,aAAOY,GAAG,CAACE,IAAX;AAF2B;AAG9B;;AACKO,EAAAA,cAAc,CAACL,EAAD,EAAK;AAAA;;AAAA;AACrB,YAAMJ,GAAG,SAAShB,KAAK,CAAC0B,MAAN,CAAc,GAAExB,GAAI,IAAGkB,EAAG,EAA1B,EAA6B,MAAI,CAAChB,cAAL,EAA7B,CAAlB;AACA,aAAOY,GAAG,CAACE,IAAX;AAFqB;AAGxB;;AA9BwB;;AAgC7Bf,eAAe,CAACwB,IAAhB,GAAuB,SAASC,uBAAT,CAAiCC,CAAjC,EAAoC;AAAE,SAAO,KAAKA,CAAC,IAAI1B,eAAV,GAAP;AAAsC,CAAnG;;AACAA,eAAe,CAAC2B,KAAhB,GAAwB,aAAc7B,EAAE,CAAC8B,kBAAH,CAAsB;AAAE1B,EAAAA,KAAK,EAAEF,eAAT;AAA0B6B,EAAAA,OAAO,EAAE7B,eAAe,CAACwB,IAAnD;AAAyDM,EAAAA,UAAU,EAAE;AAArE,CAAtB,CAAtC","sourcesContent":["import axios from 'axios';\r\nimport * as i0 from \"@angular/core\";\r\nconst API = 'http://localhost:4000/api/customers';\r\nexport class CustomerService {\r\n    getAuthHeaders() {\r\n        const token = localStorage.getItem('token'); // Make sure you store JWT after login\r\n        return {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n    }\r\n    async getCustomers(page = 1, limit = 10, filters = {}) {\r\n        const params = Object.assign({ page, limit }, filters);\r\n        const res = await axios.get(API, Object.assign(Object.assign({}, this.getAuthHeaders()), { params }));\r\n        return res.data;\r\n    }\r\n    async getCustomer(id) {\r\n        const res = await axios.get(`${API}/${id}`, this.getAuthHeaders());\r\n        return res.data;\r\n    }\r\n    async createCustomer(data) {\r\n        const res = await axios.post(API, data, this.getAuthHeaders());\r\n        return res.data;\r\n    }\r\n    async updateCustomer(id, data) {\r\n        const res = await axios.put(`${API}/${id}`, data, this.getAuthHeaders());\r\n        return res.data;\r\n    }\r\n    async deleteCustomer(id) {\r\n        const res = await axios.delete(`${API}/${id}`, this.getAuthHeaders());\r\n        return res.data;\r\n    }\r\n}\r\nCustomerService.ɵfac = function CustomerService_Factory(t) { return new (t || CustomerService)(); };\r\nCustomerService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: CustomerService, factory: CustomerService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}