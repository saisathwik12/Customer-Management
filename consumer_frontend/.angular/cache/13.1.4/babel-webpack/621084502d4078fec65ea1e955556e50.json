{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\Hp\\\\Desktop\\\\Customer Management\\\\consumer_frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport axios from 'axios';\nimport * as i0 from \"@angular/core\";\nconst API = 'http://localhost:4000/api/customers';\n\nfunction getAuthHeaders() {\n  const token = localStorage.getItem('token');\n  return {\n    Authorization: `Bearer ${token}`\n  };\n}\n\nexport class AddressService {\n  getAddresses(customerId) {\n    return _asyncToGenerator(function* () {\n      const res = yield axios.get(`${API}/${customerId}/addresses`, {\n        headers: getAuthHeaders()\n      });\n      return res.data;\n    })();\n  }\n\n  createAddress(customerId, data) {\n    return _asyncToGenerator(function* () {\n      const res = yield axios.post(`${API}/${customerId}/addresses`, data, {\n        headers: getAuthHeaders()\n      });\n      return res.data;\n    })();\n  }\n\n  updateAddress(customerId, addressId, data) {\n    return _asyncToGenerator(function* () {\n      const res = yield axios.put(`${API}/${customerId}/addresses/${addressId}`, data, {\n        headers: getAuthHeaders()\n      });\n      return res.data;\n    })();\n  }\n\n  deleteAddress(customerId, addressId) {\n    return _asyncToGenerator(function* () {\n      const res = yield axios.delete(`${API}/${customerId}/addresses/${addressId}`, {\n        headers: getAuthHeaders()\n      });\n      return res.data;\n    })();\n  }\n\n}\n\nAddressService.ɵfac = function AddressService_Factory(t) {\n  return new (t || AddressService)();\n};\n\nAddressService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AddressService,\n  factory: AddressService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/Hp/Desktop/Customer Management/consumer_frontend/src/app/addresses/address.service.ts"],"names":["axios","i0","API","getAuthHeaders","token","localStorage","getItem","Authorization","AddressService","getAddresses","customerId","res","get","headers","data","createAddress","post","updateAddress","addressId","put","deleteAddress","delete","ɵfac","AddressService_Factory","t","ɵprov","ɵɵdefineInjectable","factory","providedIn"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,MAAMC,GAAG,GAAG,qCAAZ;;AACA,SAASC,cAAT,GAA0B;AACtB,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,SAAO;AAAEC,IAAAA,aAAa,EAAG,UAASH,KAAM;AAAjC,GAAP;AACH;;AACD,OAAO,MAAMI,cAAN,CAAqB;AAClBC,EAAAA,YAAY,CAACC,UAAD,EAAa;AAAA;AAC3B,YAAMC,GAAG,SAASX,KAAK,CAACY,GAAN,CAAW,GAAEV,GAAI,IAAGQ,UAAW,YAA/B,EAA4C;AAAEG,QAAAA,OAAO,EAAEV,cAAc;AAAzB,OAA5C,CAAlB;AACA,aAAOQ,GAAG,CAACG,IAAX;AAF2B;AAG9B;;AACKC,EAAAA,aAAa,CAACL,UAAD,EAAaI,IAAb,EAAmB;AAAA;AAClC,YAAMH,GAAG,SAASX,KAAK,CAACgB,IAAN,CAAY,GAAEd,GAAI,IAAGQ,UAAW,YAAhC,EAA6CI,IAA7C,EAAmD;AAAED,QAAAA,OAAO,EAAEV,cAAc;AAAzB,OAAnD,CAAlB;AACA,aAAOQ,GAAG,CAACG,IAAX;AAFkC;AAGrC;;AACKG,EAAAA,aAAa,CAACP,UAAD,EAAaQ,SAAb,EAAwBJ,IAAxB,EAA8B;AAAA;AAC7C,YAAMH,GAAG,SAASX,KAAK,CAACmB,GAAN,CAAW,GAAEjB,GAAI,IAAGQ,UAAW,cAAaQ,SAAU,EAAtD,EAAyDJ,IAAzD,EAA+D;AAAED,QAAAA,OAAO,EAAEV,cAAc;AAAzB,OAA/D,CAAlB;AACA,aAAOQ,GAAG,CAACG,IAAX;AAF6C;AAGhD;;AACKM,EAAAA,aAAa,CAACV,UAAD,EAAaQ,SAAb,EAAwB;AAAA;AACvC,YAAMP,GAAG,SAASX,KAAK,CAACqB,MAAN,CAAc,GAAEnB,GAAI,IAAGQ,UAAW,cAAaQ,SAAU,EAAzD,EAA4D;AAAEL,QAAAA,OAAO,EAAEV,cAAc;AAAzB,OAA5D,CAAlB;AACA,aAAOQ,GAAG,CAACG,IAAX;AAFuC;AAG1C;;AAhBuB;;AAkB5BN,cAAc,CAACc,IAAf,GAAsB,SAASC,sBAAT,CAAgCC,CAAhC,EAAmC;AAAE,SAAO,KAAKA,CAAC,IAAIhB,cAAV,GAAP;AAAqC,CAAhG;;AACAA,cAAc,CAACiB,KAAf,GAAuB,aAAcxB,EAAE,CAACyB,kBAAH,CAAsB;AAAEtB,EAAAA,KAAK,EAAEI,cAAT;AAAyBmB,EAAAA,OAAO,EAAEnB,cAAc,CAACc,IAAjD;AAAuDM,EAAAA,UAAU,EAAE;AAAnE,CAAtB,CAArC","sourcesContent":["import axios from 'axios';\r\nimport * as i0 from \"@angular/core\";\r\nconst API = 'http://localhost:4000/api/customers';\r\nfunction getAuthHeaders() {\r\n    const token = localStorage.getItem('token');\r\n    return { Authorization: `Bearer ${token}` };\r\n}\r\nexport class AddressService {\r\n    async getAddresses(customerId) {\r\n        const res = await axios.get(`${API}/${customerId}/addresses`, { headers: getAuthHeaders() });\r\n        return res.data;\r\n    }\r\n    async createAddress(customerId, data) {\r\n        const res = await axios.post(`${API}/${customerId}/addresses`, data, { headers: getAuthHeaders() });\r\n        return res.data;\r\n    }\r\n    async updateAddress(customerId, addressId, data) {\r\n        const res = await axios.put(`${API}/${customerId}/addresses/${addressId}`, data, { headers: getAuthHeaders() });\r\n        return res.data;\r\n    }\r\n    async deleteAddress(customerId, addressId) {\r\n        const res = await axios.delete(`${API}/${customerId}/addresses/${addressId}`, { headers: getAuthHeaders() });\r\n        return res.data;\r\n    }\r\n}\r\nAddressService.ɵfac = function AddressService_Factory(t) { return new (t || AddressService)(); };\r\nAddressService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AddressService, factory: AddressService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}